name: Windows RDP with LocalXpose and Filebase

on:
  workflow_dispatch:
  schedule:
    - cron: "0 */6 * * *"

jobs:
  rdp:
    runs-on: windows-latest
    timeout-minutes: 360

    env:
      RDP_USER: gamingrdp
      RDP_PASSWORD: MySecurePass123!
      LOCALXPOSE_SUBDOMAIN: gamingrdp
      BACKUP_ZIP: system-backup.zip
      FILEBASE_BUCKET: ${{ secrets.FILEBASE_BUCKET }}
      AWS_ACCESS_KEY_ID: ${{ secrets.FILEBASE_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.FILEBASE_SECRET_KEY }}

    steps:
      - name: üóÇÔ∏è Checkout repo
        uses: actions/checkout@v4

      - name: üß™ Create RDP user
        run: |
          net user %RDP_USER% || net user %RDP_USER% %RDP_PASSWORD% /add
          net localgroup administrators %RDP_USER% /add

      - name: üîß Enable RDP
        run: |
          Set-ItemProperty -Path "HKLM:\System\CurrentControlSet\Control\Terminal Server" -Name "fDenyTSConnections" -Value 0
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"

      - name: üì¶ Download fresh LocalXpose binary
        run: |
          Invoke-WebRequest -Uri "https://localxpose.io/localxpose.exe" -OutFile "localxpose.exe"

      - name: üîê Login to LocalXpose
        run: .\localxpose.exe login --auth-token ${{ secrets.LOCALXPOSE_AUTH_TOKEN }}

      - name: üåê Start LocalXpose RDP Tunnel
        run: |
          Start-Process -NoNewWindow -FilePath ".\localxpose.exe" -ArgumentList "tcp --to 3389 --subdomain $Env:LOCALXPOSE_SUBDOMAIN"

      - name: ‚è≥ Wait for LocalXpose Tunnel
        run: Start-Sleep -Seconds 30

      - name: üîÅ Restore backup from Filebase (if available)
        run: |
          aws s3 cp s3://%FILEBASE_BUCKET%/%BACKUP_ZIP% %BACKUP_ZIP% || echo "No backup found."
          if (Test-Path %BACKUP_ZIP%) {
            Expand-Archive -Path %BACKUP_ZIP% -DestinationPath .
          }

      - name: üîÑ Auto Backup Loop to Filebase
        run: |
          echo 'Starting background backup loop...'
          powershell -NoProfile -ExecutionPolicy Bypass -Command "
            while (\$true) {
              Compress-Archive -Path * -DestinationPath %BACKUP_ZIP% -Force
              aws s3 cp %BACKUP_ZIP% s3://%FILEBASE_BUCKET%/%BACKUP_ZIP%
              Start-Sleep -Seconds 1800
            }
          " &
